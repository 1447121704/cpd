#pragma once

#include <Eigen/Geometry>

#include "gtest/gtest.h"

#include "cpd/matrix.hpp"

namespace cpd {
std::string test_data_filename(const std::string& filename) {
    return "@PROJECT_SOURCE_DIR@/test/data/" + filename;
}

Matrix load_test_data_matrix(const std::string& filename) {
    return matrix_from_path(test_data_filename(filename));
}

class FishTest : public ::testing::Test {
public:
    FishTest()
        : m_fish1(load_test_data_matrix("fish.txt")),
          m_rotation(M_PI / 6),
          m_translation(1, 2),
          m_fish2((m_fish1 + m_translation.replicate(m_fish1.rows(), 1)) *
                  m_rotation.matrix()) {}

    Matrix m_fish1;
    Eigen::Rotation2D<double> m_rotation;
    Eigen::RowVector2d m_translation;
    Matrix m_fish2;
};
}
